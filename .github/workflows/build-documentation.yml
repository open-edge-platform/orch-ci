---
# SPDX-FileCopyrightText: (C) 2025 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

name: 'Build Documentation'

on:  # yamllint disable-line rule:truthy rule:line-length
  workflow_call:
    inputs:
      docs_directory:
        description: >-
          Documentation directory where the job will run, defaults to '.'
        required: false
        default: "."
        type: string
      output_directory:
        description: >-
          Directory where the documentation HTML build is located,
          defaults to 'out/html'
        required: false
        default: "out/html"
        type: string
      branch_pattern:
        description: >-
          Regex pattern to match against when selecting branches to build for
          version selector, defaults to '^(main|release-.*)$'
        required: false
        default: '^(main|release-.*)$'
        type: string
      simple_mode:
        description: >-
          When true, override configuration for simple documentation sites
        required: false
        default: true
        type: boolean
      orch_ci_repo_ref:
        description: >-
          The ref of the orch-ci repo, including bootstrap action and scripts,
          defaults to 'main'
        required: false
        default: "main"
        type: string
      endpoint:
        description: >-
          Endpoint URL where documentation will be deployed to,
          defaults to 's3://intel-openedgeplatform-documentation'
        required: false
        default: "s3://intel-openedgeplatform-documentation"
        type: string
      distribution_id:
        description: >-
          Distribution ID of documentation hosting service,
          defaults to 'E1QN7TZJG8M0VL'
        required: false
        default: "E1QN7TZJG8M0VL"
        type: string
    secrets:
      SYS_ORCH_GITHUB:
        description: "PAT (contents: read) to clone private repos"
        required: true
      DOC_AWS_ACCESS_KEY_ID:
        description: AWS access key for docs bucket
        required: true
      DOC_AWS_SECRET_ACCESS_KEY:
        description: AWS secret access key for docs bucket
        required: true

jobs:
  build-documentation:
    permissions:
      contents: read        # minimal privilege required
    runs-on: ubuntu-latest
    env:
      DOCS_DIR: ${{ inputs.docs_directory }}
      REF_NAME: ${{ github.ref_name }}
      REPO: ${{ github.repository }}
    steps:
      - name: Checkout action repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
        with:
          repository: open-edge-platform/orch-ci
          path: ci
          ref: ${{ inputs.orch_ci_repo_ref }}
          token: ${{ secrets.SYS_ORCH_GITHUB }}

      - name: Bootstrap CI environment
        uses: ./ci/.github/actions/bootstrap
        with:
          gh_token: ${{ secrets.SYS_ORCH_GITHUB }}
          bootstrap_tools: "aws"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@ececac1a45f3b08a01d2dd070d28d111c5fe6722  # v4.0.1
        with:
          aws-access-key-id: ${{ secrets.DOC_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.DOC_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
        with:
          # Fetch all history, otherwise sporadic issue with missing tags
          fetch-depth: 0
          # Fetch tags
          fetch-tags: true
          # Checkout the branch that triggered the workflow
          # to avoid detached HEAD
          ref: ${{ github.head_ref }}

      # Use orch-docs as a template
      - name: Checkout template
        if: ${{ inputs.simple_mode }}
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
        with:
          repository: open-edge-platform/orch-docs
          ref: main
          path: _template
          persist-credentials: false
          sparse-checkout: |
            docconf
            Makefile
            requirements.txt
            dict.txt
            docs/conf.py
            docs/_static/logo.svg
            docs/substitutions.txt
          sparse-checkout-cone-mode: false
          token: ${{ secrets.SYS_ORCH_GITHUB }}

      - name: Copy template
        if: ${{ inputs.simple_mode }}
        shell: bash
        run: |
          cd "${GITHUB_WORKSPACE}/${DOCS_DIR}"
          # Override any existing files with template
          cp -rf "${GITHUB_WORKSPACE}"/_template/* .
          if [ -f "dictionary_append.txt" ]; then
            cat "dictionary_append.txt" >> "dict.txt"
          fi

      - name: Install Spark theme
        env:
          ENDPOINT: ${{ inputs.endpoint }}
        shell: bash
        run: |
          # Download Spark Sphinx theme
          tmpdir="$(mktemp -d)"
          aws s3 cp "${ENDPOINT}/theme/current" "${tmpdir}"
          theme_wheel="$(cat "${tmpdir}/current")"
          aws s3 cp "${ENDPOINT}/theme/${theme_wheel}" "${tmpdir}"
          # Instantiate Python Virtual Environment
          cd "${GITHUB_WORKSPACE}/${DOCS_DIR}"
          make check
          venv="$(find . -path '*/bin/activate' -name activate)"
          # shellcheck source=/dev/null
          source "${venv}"
          # Install Spark Sphinx theme
          pip3 install --no-input "${tmpdir}/${theme_wheel}"
          deactivate

      - name: Build Documentation
        env:
          SIMPLE_MODE: ${{ inputs.simple_mode }}
        shell: bash
        run: |
          cd "${GITHUB_WORKSPACE}/${DOCS_DIR}"
          make build

      # Checkout orch-ci again so the
      # 'Post Bootstrap CI Environment' step does not fail
      - name: Checkout action repository
        if: always()
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
        with:
          repository: open-edge-platform/orch-ci
          path: ci
          ref: ${{ inputs.orch_ci_repo_ref }}
          token: ${{ secrets.SYS_ORCH_GITHUB }}
